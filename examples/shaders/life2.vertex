precision mediump float;

attribute vec3 aVertexPosition;
attribute vec2 aTexturePosition;

// the only 5 pre-set uniforms
uniform mat4 uMVMatrix;
uniform mat4 uPMatrix;
uniform vec3 uTranslation;
uniform vec3 uOrientation;
uniform vec3 uScale;

varying vec2 vUv;

void main() {


  // create rotation matrix for the orientation of the object
  mat4 rotationMatrix;
  rotationMatrix[0] = vec4(uOrientation.x, 0.0, -uOrientation.z, 0.0);
  rotationMatrix[1] = vec4(0.0, 1.0, 0.0, 0.0);
  rotationMatrix[2] = vec4(uOrientation.z, 0.0, uOrientation.x, 0.0);
  rotationMatrix[3] = vec4(0.0, 0.0, 0.0, 1.0);

  // vec4 vWorldPosition = uMVMatrix * vec4(((vec4(aVertexPosition, 1.0) * rotationMatrix).xyz * uScale) + uTranslation, 1.0);

  // vec4 vWorldPosition = uMVMatrix * vec4((aVertexPosition * uScale) + uTranslation, 1.0);

  vec4 vWorldPosition = vec4(aVertexPosition, 1.0);

  vUv = aTexturePosition;
  gl_Position = vWorldPosition;
  // gl_Position = uPMatrix * vWorldPosition;
}
