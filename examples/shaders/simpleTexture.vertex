precision mediump float;

attribute vec3 aVertexPosition;
attribute vec2 aTexturePosition;

// the 5 pre-set uniforms
uniform mat4 uMVMatrix;
uniform mat4 uPMatrix;
uniform vec3 uTranslation;
uniform vec3 uOrientation;
uniform vec3 uScale;

// light uniforms
uniform mat4 uLightMVMatrix;
uniform mat4 uLightPMatrix;

varying vec2 vUv;
varying vec4 vWorldPosition;
varying vec4 vLightPosition;
const mat4 ScaleMatrix = mat4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0);

void main() {

  // create rotation matrix for the orientation of the object
  mat4 rotationMatrix;
  rotationMatrix[0] = vec4(uOrientation.x, 0.0, -uOrientation.z, 0.0);
  rotationMatrix[1] = vec4(0.0, 1.0, 0.0, 0.0);
  rotationMatrix[2] = vec4(uOrientation.z, 0.0, uOrientation.x, 0.0);
  rotationMatrix[3] = vec4(0.0, 0.0, 0.0, 1.0);

  vWorldPosition = vec4(((vec4(aVertexPosition, 1.0)).xyz * uScale) + uTranslation, 1.0);

  vLightPosition = ScaleMatrix * uLightPMatrix * uLightMVMatrix * vWorldPosition;

  vUv = aTexturePosition;

  gl_Position = uPMatrix * uMVMatrix * vWorldPosition;
}
